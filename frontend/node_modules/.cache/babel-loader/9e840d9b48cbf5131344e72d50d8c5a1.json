{"ast":null,"code":"import axios from 'axios';\nexport const register = newUser => {\n  return axios.post('http://localhost:5000/users/register', {\n    name: newUser.name,\n    password: newUser.password,\n    email: newUser.email\n  }).then(res => {\n    console.log('registred');\n  });\n};\nexport const login = user => {\n  return axios.post('http://localhost:5000/users/login', {\n    email: user.email,\n    password: user.password\n  }).then(user => {\n    localStorage.setItem('usertoken', user.data);\n    return user.data;\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/cassimiro/Modelos/ILKBASE/frontend/src/components/service/UserFunctions.js"],"names":["axios","register","newUser","post","name","password","email","then","res","console","log","login","user","localStorage","setItem","data","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAGC,OAAO,IAAI;AAC/B,SAAOF,KAAK,CAEPG,IAFE,CAEG,sCAFH,EAE2C;AAC1CC,IAAAA,IAAI,EAAEF,OAAO,CAACE,IAD4B;AAE1CC,IAAAA,QAAQ,EAAEH,OAAO,CAACG,QAFwB;AAG1CC,IAAAA,KAAK,EAAEJ,OAAO,CAACI;AAH2B,GAF3C,EAOFC,IAPE,CAOGC,GAAG,IAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GATE,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMC,KAAK,GAAGC,IAAI,IAAI;AACzB,SAAOZ,KAAK,CACPG,IADE,CACG,mCADH,EACwC;AACvCG,IAAAA,KAAK,EAAEM,IAAI,CAACN,KAD2B;AAEvCD,IAAAA,QAAQ,EAAEO,IAAI,CAACP;AAFwB,GADxC,EAKFE,IALE,CAKGK,IAAI,IAAK;AACPC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCF,IAAI,CAACG,IAAtC;AACA,WAAOH,IAAI,CAACG,IAAZ;AACP,GARE,EASFC,KATE,CASIC,GAAG,IAAI;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,GAXE,CAAP;AAYH,CAbM","sourcesContent":["import axios from 'axios'\n\nexport const register = newUser => {\n    return axios\n\n        .post('http://localhost:5000/users/register', {\n            name: newUser.name,\n            password: newUser.password,\n            email: newUser.email\n        })\n        .then(res => {\n            console.log('registred')\n        })\n}\n\nexport const login = user => {\n    return axios\n        .post('http://localhost:5000/users/login', {\n            email: user.email,\n            password: user.password\n        })\n        .then(user  => {\n                localStorage.setItem('usertoken',user.data)\n                return user.data\n        })\n        .catch(err => {\n            console.log(err)\n        })\n}"]},"metadata":{},"sourceType":"module"}